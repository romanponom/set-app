plugins {
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'http://repo.spring.io/libs-release' }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    group 'set-app'
    version '1.0-SNAPSHOT'

    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'http://repo.spring.io/libs-release' }
    }

    ext {
        set('springCloudVersion', "Hoxton.SR8")
        set('springCloudStarterFeignVersion', "1.4.7.RELEASE")
        set('feignVersion', "11.0")
        set('lombokVersion', "1.18.16")
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-webflux"
        implementation "org.springframework.boot:spring-boot-starter-actuator"
        implementation "org.springframework.boot:spring-boot-starter-data-jpa"
        implementation "org.springframework.boot:spring-boot-starter-aop"
        implementation "org.springframework.retry:spring-retry:1.2.4.RELEASE"

        //implementation "org.springframework.boot:spring-boot-starter-thymeleaf"

        implementation "org.springframework.cloud:spring-cloud-starter-config"
        //implementation "org.springframework.cloud:spring-cloud-starter-feign:${springCloudStarterFeignVersion}"
        implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
        implementation "org.springframework.cloud:spring-cloud-starter-netflix-ribbon"
        implementation "io.github.openfeign:feign-jackson:${feignVersion}"
        implementation "io.github.openfeign:feign-httpclient:${feignVersion}"
        implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server"
        implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"

        implementation "com.h2database:h2"
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        //testImplementation "com.github.tomakehurst:wiremock-jre8:2.27.1"
        testImplementation "org.springframework.cloud:spring-cloud-contract-wiremock"
        testImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner"

        implementation "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    test {
        useJUnitPlatform()
        reports {
            html.enabled true
            junitXml.enabled = true
        }
    }

    sourceSets {
        integration {
            java.srcDir "$projectDir/src/integration/java"
            resources.srcDir "$projectDir/src/integration/resources"
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
    }

    configurations {
        integrationImplementation.extendsFrom testImplementation
        integrationRuntime.extendsFrom testRuntime
    }

    task integrationTest(type: Test) {
        testClassesDirs = sourceSets.integration.output.classesDirs
        classpath = sourceSets.integration.runtimeClasspath
        useJUnitPlatform()
        reports {
            html.enabled true
            junitXml.enabled = true
        }
    }

    check.dependsOn integrationTest

    task runBootJar(dependsOn: bootJar) {}
}
