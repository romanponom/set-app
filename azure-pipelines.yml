name: "set-pipeline"

trigger:
  - master

stages:
  - stage: "Build_test_push"
    displayName: "[STAGE] Compile, build, test application and push images to docker hub"
    jobs:
      - job: "Build_test_push"
        displayName: "[JOB] Compile, build, test application and push images to docker hub"
        pool: "Ubuntu_Poll"
        steps:
          - script: sudo chmod +x gradlew; ./gradlew clean compileTestJava
            displayName: "[SCRIPT] Compile app"
          - script: ./gradlew db-service:test
            displayName: "[SCRIPT] Run unit test for db-service"
          - script: ./gradlew componentTest
            displayName: "[SCRIPT] Run component test"
          - script: ./gradlew runBootJar
            displayName: "[SCRIPT] Build jar"
          - script: sudo chmod +x /usr/bin/docker-compose; sudo docker-compose -f docker-compose.push.yml build;
            displayName: "[SCRIPT] Build images"
          - script: sudo chmod 666 /var/run/docker.sock; docker login -u "roman626" -p "626mabasA626!" docker.io; sudo docker-compose -f docker-compose.push.yml push; docker logout
            displayName: "[SCRIPT] Push images"

  - stage: "Pull_deploy_integration_pact"
    displayName: "[STAGE] Pull images, deploy and run integration and pact tests"
    jobs:
      - job: "Pull_deploy_integration_pact"
        displayName: "[JOB] Pull images, deploy and run integration and pact tests"
        pool: "Ubuntu_Poll2"
        steps:
          - script: sudo chmod +x /usr/bin/docker-compose; sudo docker-compose -f docker-compose.remote.yml up -d
            displayName: "[SCRIPT] Pull and deploy images"
          - script: sudo chmod +x /usr/bin/docker-compose; sudo docker-compose -f pact-broker/docker-compose.yml up -d
            displayName: "[SCRIPT] Deploy pact broker"
          - script: sudo chmod +x gradlew; ./gradlew db-service:test; ./gradlew db-service:pactPublish
            displayName: "[SCRIPT] Publish pacts"
          - task: Delay@1
              inputs:
                delayForMinutes: '2'
          - script: sudo chmod +x gradlew; ./gradlew integrationTest
            displayName: "[SCRIPT] Run integration test"
          - script: sudo chmod +x gradlew; ./gradlew admin-service:test
            displayName: "[SCRIPT] Run contract test"
          - script: sudo docker container stop $(docker container ls -aq) && sudo docker container rm $(docker container ls -aq)
            displayName: "[SCRIPT] Stop and remove containers"
